service: wdip-be

app: wdip-be
tenant: hejare

plugins:
  - serverless-plugin-typescript
  - serverless-offline-sqs
  - serverless-offline-scheduler
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  profile: wdip-test
  region: eu-west-1
  environment: ${file(./environment_${opt:stage, "local"}.yml)}
  enableScheduled: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - es:ESHttpPost
        - es:ESHttpPut
        - es:ESHttpDelete
        - es:ESHttpGet
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
        - sqs:SendMessage
        - lambda:InvokeFunction
      Resource:
        - arn:aws:es:${self:provider.region}:843375259671:domain/wdip-${opt:stage, "local"}
        - arn:aws:sqs:${self:provider.region}:843375259671:wdip-import-${opt:stage, "local"}
        - arn:aws:lambda:${self:provider.region}:843375259671:*

functions:
  getPendingMotions:
    handler: src/apiHandler.getPendingMotions
    events:
      - http:
          path: motions/pending
          method: get
  getMotionsByParty:
    handler: src/apiHandler.getMotionsByParty
    events:
      - http:
          path: motions/byparty
          method: get
  getMotion:
    handler: src/apiHandler.getMotionById
    events:
      - http:
          path: motions/{id}
          method: get
          requests:
            parameters:
              paths:
                id: true
  getWordCloud:
    handler: src/apiHandler.getWordCloud
    events:
      - http:
          path: charts/wordcloud
          method: get
  getAllParties:
    handler: src/apiHandler.getAllParties
    events:
      - http:
          path: partydata/allparties
          method: get
  routeAdminStartImport:
    handler: src/importHandler.routeAdminStartImport
    events:
      - http:
          path: admin/import
          method: post
          requests:
            parameters:
              querystrings:
                documentType: false
                fromDate: false
                toDate: false
  adminStartImport:
    handler: src/importHandler.adminStartImport
    timeout: 900 # max 15 min timeout on AWS
  routeAdminStartUpdateImport:
    handler: src/importHandler.routeAdminStartUpdateImport
    events:
      - http:
          path: admin/import/update
          method: post
          requests:
            parameters:
              querystrings:
                fromDate: false
                documentType: false
  adminStartUpdateImport:
    handler: src/importHandler.startUpdateImport
    timeout: 900 # max 15 min timeout on AWS
    events:
      - schedule:
          rate: rate(1 day)
          enabled: ${self:provider.enableScheduled}
          input:
            documentType: mot
      - schedule:
          rate: rate(1 day)
          enabled: ${self:provider.enableScheduled}
          input:
            documentType: prop
  adminHandleImportQueueEvent:
    handler: src/importHandler.handleImportQueueEvent
    events:
      - sqs:
          arn: arn:aws:sqs:eu-west-1:843375259671:wdip-import-${opt:stage, "local"}
          batchSize: 1
  adminLogQueueStatus:
    handler: src/importHandler.logQueueStatus
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: ${self:provider.enableScheduled}

custom:
  serverless-offline-sqs:
    endpoint: http://sqs:9324
    region: ${self:provider.region}
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false
